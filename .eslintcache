[{"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Login.js":"2","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Signup.js":"4","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\App.js":"5","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\User.js":"6","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Edit.js":"7"},{"size":155,"mtime":1606992611319,"results":"8","hashOfConfig":"9"},{"size":2909,"mtime":1607157633344,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":10791,"mtime":1607153772179,"results":"12","hashOfConfig":"9"},{"size":833,"mtime":1607148752751,"results":"13","hashOfConfig":"9"},{"size":3106,"mtime":1607148996273,"results":"14","hashOfConfig":"9"},{"size":0,"mtime":1607075326854,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"td0xxi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\index.js",[],["33","34"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Login.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\reportWebVitals.js",[],["35","36"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Signup.js",["37"],"import React, {useState, useEffect} from \"react\";\r\nimport {Row, Col, Card, Form, Input, Select, Radio, Checkbox, Button, InputNumber} from \"antd\";\r\nimport {UserOutlined, MailOutlined, HomeOutlined, FlagOutlined, LockOutlined, MobileOutlined} from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const [userDetail, setUserDetail] = useState({});\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = React.useState({});\r\n    // const [editableIndex, setEditableIndex] = useState(null);\r\n\r\n    const [items] = useState([\r\n        {\r\n            label: \"India\",\r\n            value: \"India\"\r\n        },\r\n        {\r\n            label: \"Brazil\",\r\n            value: \"Brazil\"\r\n        },\r\n        {\r\n            label: \"USA\",\r\n            value: \"USA\"\r\n        },\r\n        {\r\n            label: \"Dubai\",\r\n            value: \"Dubai\"\r\n        },\r\n        {\r\n            label: \"UK\",\r\n            value: \"UK\"\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        let list = [];\r\n        if (JSON.parse(localStorage.getItem(\"list\")) !== null) {\r\n            list = JSON.parse(localStorage.getItem(\"list\"));\r\n            if (props.match.params.id) {\r\n                const findId = list.find(item => item.id === parseInt(props.match.params.id));\r\n                    setUserDetail(findId);\r\n            }\r\n        }\r\n        setData(list);\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n\r\n            setUserDetail({...userDetail, [name]: value})\r\n    }\r\n    const validate = (name, value) => {\r\n        const emailRegx = /^[\\w-]+@([\\w-]+\\.)+[\\w-]{2,4}$/ig;\r\n        const numRegx = /^\\d{1,6}(?:\\.\\d{0,2})?$/g;\r\n        switch (name) {\r\n            case 'firstName':\r\n                if (!value) return \"First Name is required\";\r\n                return null;\r\n            case 'lastName':\r\n                if (!value) return \"Last Name is required\";\r\n                return null;\r\n            case 'email':\r\n                if (!emailRegx.test(value)) return \"Email is required\";\r\n                return null;\r\n            case 'age':\r\n                if (!numRegx.test(value)) return \"Age is required\";\r\n                return null;\r\n            case 'address':\r\n                if (!value) return \"Address is required\";\r\n                return null;\r\n            case 'gender':\r\n                if (!value) return \"Gender is required\";\r\n                return null;\r\n            case 'country':\r\n                if (!value) return \"Country is required\";\r\n                return null;\r\n            case 'password':\r\n                if (!value) return \"Password is required\";\r\n                return null;\r\n            case 'checkbox':\r\n                if (!value) return \"mark is required\";\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        let errorObj = {}\r\n        const newsUerDetail = {\r\n            firstName: userDetail.firstName,\r\n            lastName: userDetail.lastName,\r\n            email: userDetail.email,\r\n            age: userDetail.age,\r\n            address: userDetail.address,\r\n            gender: userDetail.gender,\r\n            country: userDetail.country,\r\n            password: userDetail.password\r\n            // confirm: userDetail.confirm\r\n        }\r\n        console.log(newsUerDetail)\r\n\r\n        Object.keys(newsUerDetail).forEach((key) => {\r\n            const error = validate(key, newsUerDetail[key]);\r\n            if (error && error.length) {\r\n                errorObj[key] = error;\r\n            }\r\n        });\r\n        if (Object.keys(errorObj).length) {\r\n            return setError(errorObj);\r\n        } else {\r\n            if (props.match.params.id !== undefined) {\r\n                let index = data.findIndex(item => item.id === parseInt(props.match.params.id));\r\n                data[index] = userDetail\r\n                setData(data)\r\n            } else {\r\n                userDetail.id = data.length + 1;\r\n                data.push(userDetail)\r\n                setData(data)\r\n            }\r\n\r\n            localStorage.setItem(\"list\", JSON.stringify(data));\r\n            setError({});\r\n            props.history.push(\"/user\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{marginTop: 100}}>\r\n                <Col span={8}/>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <h2 style={{textAlign: \"center\"}}>Registration Form</h2>\r\n                        <p style={{textAlign: \"center\"}}>Creat Your Account</p><br/>\r\n                        <Form>\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your firstname\" name=\"firstName\" value={userDetail.firstName}\r\n                                       onChange={handleChange} addonBefore={(<UserOutlined/>)}/>\r\n                                <span className=\"text-danger\">{error.firstName || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your lastname\" name=\"lastName\" value={userDetail.lastName}\r\n                                       onChange={handleChange} addonBefore={(<UserOutlined/>)}/>\r\n                                <span className=\"text-danger\">{error.lastName || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your EmailId\" name=\"email\" value={userDetail.email}\r\n                                       onChange={handleChange} addonBefore={<MailOutlined/>}/>\r\n                                <span className=\"text-danger\">{error.email || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Input placeholder=\"Enter Your Mobile Number\" name=\"phone\" value={userDetail.phone}\r\n                                       onChange={handleChange} addonBefore={<MobileOutlined/>}\r\n                                       style={{width: '100%'}}/>\r\n                                <span className=\"text-danger\">{error.phone || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                Age : <InputNumber placeholder=\"age\" name=\"age\"\r\n                                             onChange={value => handleChange({target: {name: \"age\", value}})} value={userDetail.age}/>\r\n                                <span className=\"text-danger\">{error.age || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n\r\n                            <Form.Item>\r\n                                <Input rows={4} name=\"address\" placeholder=\"Please Input Your Address!\"\r\n                                       value={userDetail.address}\r\n                                       onChange={handleChange} addonBefore={<HomeOutlined/>}/>\r\n                                <span className=\"text-danger\">{error.address || \"\"}</span>\r\n\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n\r\n                                Gender: <Radio.Group name=\"gender\"  onChange={e => handleChange({target: {name: \"gender\", value: e.target.value}})} value={userDetail.gender}>\r\n                                    <Radio value=\"Male\" >Male</Radio>\r\n                                    <Radio value=\"Female\" >Female</Radio>\r\n                                    <Radio value=\"Other\" >Other</Radio>\r\n                                </Radio.Group>\r\n                                <span className=\"text-danger\">{error.gender || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item  label={(<FlagOutlined/>)}>\r\n                                <Select\r\n                                    placeholder=\"Please Select Your Country\"\r\n                                    onChange={value => handleChange({target: {name: \"country\", value}})}  value={userDetail.country}\r\n                                    allowClear\r\n                                >\r\n                                    {items.map(items => (\r\n                                        <Select.Option\r\n                                            key={items.value}\r\n                                            value={items.value}>\r\n                                            {items.label}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                                <span className=\"text-danger\">{error.country || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n\r\n                                <Input.Password placeholder=\"Enter Your PassWord\" name=\"password\"\r\n                                                value={userDetail.password} onChange={handleChange}\r\n                                                addonBefore={(<LockOutlined/>)}/>\r\n                                <span className=\"text-danger\">{error.password || \"\"}</span>\r\n                            </Form.Item>\r\n\r\n                            {/*<Form.Item*/}\r\n                            {/*    name=\"password\"*/}\r\n\r\n                            {/*>*/}\r\n                            {/*    <Input.Password placeholder=\"Enter Your Confirm PassWord\"  value={userDetail.confirm} onChange={handleChange} name=\"confirm \"addonBefore={(<LockOutlined/>)}/>*/}\r\n\r\n                            {/*    <span className=\"text-danger\">{error.confirm || \"\"}</span>*/}\r\n                            {/*</Form.Item>*/}\r\n\r\n                            <Form.Item\r\n                                // name=\"agreement\"\r\n                                // valuePropName=\"checked\"\r\n                                // rules={[\r\n                                //     {\r\n                                //         validator: (_, value) =>\r\n                                //             value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                                //     },\r\n                                // ]}\r\n                            >\r\n                                <Checkbox name=\"checkbox\">\r\n                                    I have read the agreement\r\n                                </Checkbox>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={onSubmit}>\r\n                                    Create Account\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default SignUp;\r\n","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\User.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Edit.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":46,"column":8,"nodeType":"46","endLine":46,"endColumn":10,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [props.match.params.id]",{"range":"53","text":"54"},[1397,1399],"[props.match.params.id]"]