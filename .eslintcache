[{"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Login.js":"2","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Signup.js":"4","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\App.js":"5","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\User.js":"6","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Dashboard.js":"7","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\PrivateRoute.js":"8"},{"size":155,"mtime":1606992611319,"results":"9","hashOfConfig":"10"},{"size":3810,"mtime":1607666521730,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":11230,"mtime":1607667866444,"results":"13","hashOfConfig":"10"},{"size":1060,"mtime":1607172315369,"results":"14","hashOfConfig":"10"},{"size":5864,"mtime":1607667866456,"results":"15","hashOfConfig":"10"},{"size":540,"mtime":1607172554104,"results":"16","hashOfConfig":"10"},{"size":588,"mtime":1607169235791,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"td0xxi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\index.js",[],["37","38"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Login.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\reportWebVitals.js",[],["39","40"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Signup.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\User.js",["41"],"import React, {useState, useEffect} from 'react';\nimport {Row, Col, Popconfirm, message} from 'antd';\nimport Table from \"antd/lib/table\";\nimport {useHistory} from \"react-router\";\nimport axios from \"axios\";\n\nconst User = (props) => {\n    const history = useHistory();\n    const text1 = 'Are you sure to Delete this task?';\n\n    const [searchDetail, setSearchDetail] = useState({\n         firstName: \"\",\n        lastName: \"\",\n        age: \"\",\n        gender: \"\",\n        email:\"\",\n        password:\"\"\n    });\n    const [data, setData] = useState([]);\n    const [duplicate, setDuplicate] = useState([]);\n\n    useEffect(() => {\n        // let list = [];\n        // if (JSON.parse(localStorage.getItem('list')) !== null) {\n        //     list = JSON.parse(localStorage.getItem(\"list\"));\n        // }\n        // ;\n        // setData(list);\n        // setDuplicate(list);\n        listData();\n    }, [])\n\n    const listData =()=>{\n        axios.get(`http://localhost:8080/notes`).then(response => setData(response.data || [])).catch(error => console.log(error));\n    }\n\n    const handleChange = e => {\n        const {name, value} = e.target;\n        setSearchDetail({...searchDetail, [name]: value})\n    }\n\n    const searchResult = e => {\n        let searchTable = searchDetail;\n        let searchTool = duplicate || []\n        if (searchTable.firstName) {\n            searchTool = searchTool.filter(record => record.firstName.toLowerCase().includes(searchTable.firstName.toLowerCase()))\n        }\n        if (searchTable.lastName) {\n            searchTool = searchTool.filter(record => record.lastName.toLowerCase().includes(searchTable.lastName.toLowerCase()))\n        }\n        if (searchTable.age) {\n            searchTool = searchTool.filter(record => record.age.toString().toLowerCase().includes(searchTable.age.toLowerCase()))\n        }\n        if (searchTable.gender) {\n            searchTool = searchTool.filter(record => record.gender.toLowerCase() === searchTable.gender.toLowerCase())\n        }\n        setData(searchTool)\n    }\n\n    const onDelete = (record) => {\n\n        // const filterData = data.filter(index => index !== record);\n        // localStorage.setItem('list', JSON.stringify(filterData));\n        // setData(filterData);\n\n        axios.delete(`http://localhost:8080/notes/${record._id}`).then(response => {\n            listData();\n            message.success(\"successfully deleted\")\n        }).catch(error => console.log(error));\n    }\n\n    const onEdit = (id) => {\n        history.push(`/editUserDetails/${id}`);\n\n    }\n\n    const addNew = () => {\n        history.push('/Signup');\n    }\n    const logout = () => {\n        message.success('Successfully logout');\n        localStorage.setItem('token', '')\n        history.push('/');\n    }\n    const columns = [\n        {\n            title: 'ID',\n            dataIndex: 'id',\n            key: 'id',\n\n        },\n        {\n            title: 'First Name',\n            dataIndex: 'firstName',\n            key: 'firstName',\n\n        },\n        {\n            title: 'Last Name',\n            dataIndex: 'lastName',\n            key: 'lastName',\n\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            key: 'age',\n\n        },\n        {\n            title: 'Country',\n            dataIndex: 'country',\n            key: 'country',\n\n        },\n        {\n            title: 'Gender',\n            dataIndex: 'gender',\n            key: 'gender',\n        },\n        {\n            title: 'Password',\n            dataIndex: 'password',\n            key: 'password',\n        },\n        {\n            title: 'Action',\n            dataIndex: 'id',\n            render: (text, record) => (\n                <div>\n                    <button className=\"btn btn-outline-primary btn-mini\" onClick={() => {\n                        onEdit(record._id)\n                    }}>\n                        Edit\n                    </button>\n                    &nbsp; &nbsp;\n\n                    <Popconfirm placement=\"rightTop\" title={text1} onConfirm={() => {\n                        onDelete(record._id)\n                    }} okText=\"Yes\" cancelText=\"No\">\n                        <button className=\"btn btn-outline-danger btn-mini\">\n                            Delete\n                        </button>\n                    </Popconfirm>\n                </div>\n            )\n        },\n\n    ]\n\n\n    return (\n        <>\n            <h3 id=\"user-id\">Users Detail</h3>\n\n\n            <button className=\"btn-add-new\" onClick={addNew}>Add New</button>\n\n            <input className=\"search\" value={searchDetail.firstName} name=\"firstName\" placeholder=\"search firstname\"\n                   onChange={handleChange}/>\n\n\n            <input className=\"search\" value={searchDetail.lastName} name=\"lastName\" placeholder=\"search lastname\"\n                   onChange={handleChange}/>\n\n            <input className=\"search\" value={searchDetail.age} name=\"age\" placeholder=\"search age\"\n                   onChange={handleChange}/>\n\n            <input className=\"search\" value={searchDetail.gender} name=\"gender\" placeholder=\"search gender\"\n                   onChange={handleChange}/>\n            <button onClick={searchResult}>Search</button>\n\n            <Row>\n                <Col span={4}/>\n                <Col span={16} className=\"mt-3\">\n                    <Table\n                        columns={columns}\n                        dataSource={data}\n                        pagination={{pageSize: 5}}\n                    />\n                </Col>\n            </Row>\n            <button className=\"btn-log-out\" onClick={logout}>Log Out</button>\n        </>\n    );\n}\nexport default User;\n","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Dashboard.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\PrivateRoute.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":21,"column":23,"nodeType":"50","messageId":"51","endLine":21,"endColumn":35},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],["52"],["53"],"no-unused-vars","'setDuplicate' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]