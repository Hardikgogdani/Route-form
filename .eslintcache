[{"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Login.js":"2","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Signup.js":"4","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\App.js":"5","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\User.js":"6","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Edit.js":"7"},{"size":155,"mtime":1606992611319,"results":"8","hashOfConfig":"9"},{"size":2245,"mtime":1607003342584,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":9731,"mtime":1607076069294,"results":"12","hashOfConfig":"9"},{"size":755,"mtime":1607076394547,"results":"13","hashOfConfig":"9"},{"size":3160,"mtime":1607076260849,"results":"14","hashOfConfig":"9"},{"size":0,"mtime":1607075326854,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"td0xxi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\index.js",[],["33","34"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Login.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\reportWebVitals.js",[],["35","36"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Signup.js",["37"],"import React,{useState,useEffect} from \"react\";\r\nimport {Row, Col, Card, Form, Input, InputNumber, Select, Radio, Checkbox, Button} from \"antd\";\r\nimport {UserOutlined, MailOutlined, HomeOutlined, FlagOutlined, LockOutlined, MobileOutlined} from \"@ant-design/icons\";\r\nimport 'antd/dist/antd.css';\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const [userDetail, setUserDetail] = useState({\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        age: \"\",\r\n        address: \"\",\r\n        gender: \"\",\r\n        country: \"\",\r\n        password: \"\"\r\n    });\r\n    const [data, setData] = useState([]);\r\n    const [editableIndex, setEditableIndex] = useState(null);\r\n\r\n    const [items] =useState([\r\n        {\r\n            label: \"India\",\r\n            value : \"India\"\r\n        },\r\n        {\r\n            label: \"Brazil\",\r\n            value : \"Brazil\"\r\n        },\r\n        {\r\n            label: \"USA\",\r\n            value : \"USA\"\r\n        },\r\n        {\r\n            label: \"Dubai\",\r\n            value : \"Dubai\"\r\n        },\r\n        {\r\n            label: \"UK\",\r\n            value : \"UK\"\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        let list = [];\r\n        if (JSON.parse(localStorage.getItem(\"data\")) !== null) {\r\n            list = JSON.parse(localStorage.getItem(\"data\"));\r\n        }\r\n        setData(list);\r\n    }, [])\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        if (name === \"gender\") {\r\n            setUserDetail({...userDetail, [name]: value})\r\n        } else {\r\n            setUserDetail({...userDetail, [name]: value})\r\n        }\r\n    }\r\n\r\n    const onSub = () => {\r\n\r\n            userDetail.id = data.length + 1;\r\n            data.push(userDetail)\r\n            setData(data)\r\n        localStorage.setItem(\"data\", JSON.stringify(data));\r\n        setUserDetail({})\r\n        setEditableIndex(null)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row style={{marginTop: 100}}>\r\n                <Col span={8}/>\r\n                <Col span={8}>\r\n                    <Card>\r\n                        <h2 style={{textAlign: \"center\"}}>Registration Form</h2>\r\n                        <p style={{textAlign: \"center\"}}>Creat Your Account</p><br/>\r\n                        <Form onFinishFailed onFinish={() => {\r\n                            props.history.push(\"/User\")\r\n                        }}>\r\n                            <Form.Item\r\n                                name=\"firstname\"\r\n                                rules={[{required: true, message: 'Please input your firstname!'}]}\r\n                            >\r\n                                <Input placeholder=\"Enter Your firstname\" name=\"firstname\" value={userDetail.firstname} onChange={handleChange} addonBefore={(<UserOutlined/>)}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"lastname\"\r\n                                rules={[{required: true, message: 'Please input your lastname!'}]}\r\n                            >\r\n                                <Input placeholder=\"Enter Your lastname\" name=\"lastname\" value={userDetail.lastname} onChange={handleChange} addonBefore={(<UserOutlined/>)}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                rules={[{required: true, message: 'Please input your EmailId!', type: 'email'}]}\r\n                            >\r\n                                <Input placeholder=\"Enter Your EmailId\" name=\"email\" value={userDetail.email} onChange={handleChange} addonBefore={<MailOutlined/>}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"phone\"\r\n                                rules={[{required: true, message: 'Please input your phone number!'}]}\r\n                            >\r\n                                <Input placeholder=\"Enter Your Mobile Number\" name=\"phone\" value={userDetail.phone} onChange={handleChange} addonBefore={<MobileOutlined/>}\r\n                                       style={{width: '100%'}}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"age\"\r\n                                label=\"Age\"\r\n                                rules={[{\r\n                                    required: true,\r\n                                    message: 'Please input your age!',\r\n                                    type: 'number',\r\n                                    min: 1,\r\n                                    max: 100\r\n                                }]}\r\n                            >\r\n                                <InputNumber placeholder=\"age\" name=\"age\" onChange={value => handleChange( {target : {name : \"age\",value}})}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"address\"\r\n                                rules={[{required: true, message: 'Address is required'}]}\r\n                            >\r\n                                <Input style={{width: '50%'}} placeholder=\"Input Address\"\r\n                                       name=\"address\" value={userDetail.address} addonBefore={<HomeOutlined/>} onChange={handleChange}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item  name=\"gender\" rules={[{required: true, message: 'Gender is required'}]}>\r\n                                <Radio.Group onChange={e => handleChange( {target : {name : \"gender\",value: e.target.value}})} value={userDetail.gender}>\r\n                                    <Radio value=\"male\">Male</Radio>\r\n                                    <Radio value=\"female\">Female</Radio>\r\n                                    <Radio value=\"other\">Other</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item name=\"country\" label={(<FlagOutlined/>)}\r\n                                       rules={[{required: true, message: 'Country is required'}]}>\r\n                                <Select\r\n                                    placeholder=\"Please Select Your Country\"\r\n                                    onChange={value => handleChange( {target : {name : \"country\",value}})}\r\n                                    allowClear\r\n                                >\r\n                                    {items.map(items => (\r\n                                        <Select.Option\r\n                                            key={items.value}\r\n                                            value={items.value}>\r\n                                            {items.label}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                rules={[{required: true, message: 'Please input your password!'}]}\r\n                                hasFeedback\r\n                            >\r\n                                <Input.Password placeholder=\"Enter Your PassWord\" name=\"password\" value={userDetail.password} onChange={handleChange} addonBefore={(<LockOutlined/>)}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[{required: true, message: 'Please confirm your password!'},\r\n                                    ({getFieldValue}) => ({\r\n                                        validator(rule, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n                                            return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password placeholder=\"Enter Your Confirm PassWord\"\r\n                                                addonBefore={(<LockOutlined/>)}/>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"agreement\"\r\n                                valuePropName=\"checked\"\r\n                                rules={[\r\n                                    {\r\n                                        validator: (_, value) =>\r\n                                            value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Checkbox>\r\n                                    I have read the agreement\r\n                                </Checkbox>\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" onClick={onSub}>\r\n                                    Create Account\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default SignUp;\r\n","C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\App.js",[],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\User.js",["38","39"],"C:\\Users\\Admin\\Desktop\\route form\\routeform\\src\\Edit.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":20,"column":12,"nodeType":"48","messageId":"49","endLine":20,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":10,"column":12,"nodeType":"48","messageId":"49","endLine":10,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":11,"column":12,"nodeType":"48","messageId":"49","endLine":11,"endColumn":22},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],["51"],["52"],"no-unused-vars","'editableIndex' is assigned a value but never used.","Identifier","unusedVar","'userDetail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]